@using Jandag.BLL.Models

<h2 class="text-center">არხების ინფორმაცია</h2>
<title>მთავარი გვერდი</title>
<head>
    <style>
        body 
        {
            background-color: #B2B377;
            color: #8B4513; 
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }

        h1, h2, h3 {
            color: #8B4513; /* Saddle brown */
        }

        a {
            color: #FF4500; /* Orange red */
            text-decoration: none;
        }

            a:hover {
                text-decoration: underline;
            }

        .container {
            max-width: 1500px;
            margin: 0 auto;
            background-color: #FFF8DC; /* Cornsilk */
            padding: 20px;
            border-radius: 50px;
        }

        .button {
            background-color: #FF6347; /* Tomato */
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .button:hover {
                background-color: #CD5C5C; /* Indian red */
            }

        .footer {
            text-align: center;
            margin-top: 20px;
            padding: 10px 0;
            background-color: #FFE4E1; /* Light pink */
        }
        }
    </style>
</head>
<body>

    @(
        Html.DevExtreme().DataGrid<AllInOneModel>()
        .ShowBorders(true)
        .DataSource(d => d.Mvc().Controller("SampleData").LoadAction("Get").Key("ChanellName"))
        .Columns(columns =>
        {
            columns.AddFor(m => m.ChanellName);
            columns.AddFor(m => m.ChanellFormat);
            columns.AddFor(m => m.SourceIsActive);
            columns.AddFor(m => m.Frequency);
            columns.AddFor(m => m.RecieverInfo);
            columns.AddFor(m => m.DesclamlerInfo);
            columns.AddFor(m => m.TranscoderInfo);
        })
        .Paging(p => p.PageSize(20))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .GroupPanel(p => p.Visible(true))
        .Grouping(g => g.AutoExpandAll(true))
        .RemoteOperations(true)
        .ColumnAutoWidth(true)
        .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.SourceIsActive).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Sum);
        })
        )
        )
</body>

