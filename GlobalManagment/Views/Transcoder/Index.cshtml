@{
    ViewData["Title"] = "Index";
}
<div class="message-box">
    @if (TempData["Error"] != null)
    {
        <div class="error-message">
            <script>
                alert('@TempData["Error"]');
            </script>
        </div>
    }
    @if (TempData["success"] != null)
    {
        <div class="success-message">
            <script>
                alert('@TempData["success"]');
            </script>
        </div>
    }
</div>
<h2 class="text-center">ტრანსკოდერის ინფორმაცია</h2>
<title>ტრანსკოდერი</title>
<head>
    <style>
        body {
            background-color: #B2B377;
            color: #8B4513; 
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }

        h1, h2, h3 {
            color: #8B4513;
        }

        a {
            color: #FF4500;
            text-decoration: none;
        }

            a:hover {
                text-decoration: underline;
            }

        .container {
            max-width: 1500px;
            margin: 0 auto;
            background-color: #FFF8DC;
            padding: 20px;
            border-radius: 50px;
        }

        .button {
            background-color: #FF6347;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .button:hover {
                background-color: #CD5C5C;
            }

        .footer {
            text-align: center;
            margin-top: 20px;
            padding: 10px 0;
            background-color: #FFE4E1;
        }

    </style>
</head>
<body>
    @(
        Html.DevExtreme().DataGrid<Jandag.BLL.Models.ViewModels.TranscoderViewModel>()
        .DataSource(ds => ds.Mvc()
             .Key("Id")
            .Controller("Transcoder")
            .LoadAction("Get")
            .InsertAction("Insert")
            .UpdateAction("Update")
            .DeleteAction("Delete")
        )
        .Paging(p => p.PageSize(20))
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .RemoteOperations(true)
            .ColumnAutoWidth(true)
        .RemoteOperations(true)
        .Columns(columns => {

        columns.AddFor(m => m.CHanellName);

        columns.AddFor(m => m.TransocdingFormat);

        columns.AddFor(m => m.EmrNumber);

        columns.AddFor(m => m.Card);

        columns.AddFor(m => m.Port);
    })
        .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        )
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.EmrNumber).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Sum);
        })
        )
)
</body>
