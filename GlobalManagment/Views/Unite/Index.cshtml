@using Jandag.BLL.Models;
@using Jandag.BLL.Services
@using Jandag.Persistance.Services
@model UniteModel
@{
    Layout = null;
}
@if (Model == null)
{
    var defaultModel = new EmrServices();
    var temp = new TemperatureService();
    Model.chyanellnameandalarm.ports = await defaultModel.GetPortsWhereAlarmsIsOn();
    Model.chyanellnameandalarm.namees = await defaultModel.GetChanellNames();
    var res = await temp.GetCUrrentTemperature();
    Model.temperature = res.Item1;
    Model.Humidity = res.Item2;
}
<head>
    <style>

        body {
            margin-top: 0px;
            background-color: #D2D180;
            width: 100%;
            height: 98%;
            margin: 0;
        }

        .h1 {
            margin-bottom: 100px;
        }

        .container {
            margin-top: 4em;
            flex: 2;
            max-width: 95%;
            min-height: 98%;
            background-color: #D2D180;
            margin-left: 45px;
            position: center;
        }

        .button-group {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 15px;
        }

        .button {
            margin: 2px 2px 2px 2px;
            min-width: 210px;
            min-height: 45px;
            background-color: green;
            color: floralwhite;
            font-weight: 400;
            font-size: 20px;
            border-radius: 200px;
            width: 3.3em;
            height: 2.8em;
        }

        .header {
            position: center;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #B2B377;
            color: white;
            text-align: center;
        }

        .button.red {
            background-color: red;
            font-weight: 500;
            color: white;
        }

        .button.yellow {
            background-color: dimgrey;
            color: black;
            font-weight: bolder;
            opacity: 0.7;
        }

        .button:hover {
            background-color: black;
            color: red;
            opacity: 1;
        }


        .button.buttonIko {
            margin: 2px;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            font-size: 19px;
            border-radius: 40px;
            padding: 5px 10px;
            background-color: green;
            color: ghostwhite;
            font-weight: 600;
            /*    width: 1.3em; */
            height: 1.9em;
        }

            .button.buttonIko.red {
                background-color: red;
            }

            .button.buttonIko:hover {
                background-color: black;
                font-weight: bolder;
                color: red;
            }

        .containera {
            padding: 20px;
            display: inline-flex;
            flex-wrap: wrap;
            min-width: 98%;
            gap: 12px;
            justify-content: flex-start;
            background-color: #B2B377;
            width: 100%;
            margin-top: 0.5em;
        }

        .card {
            width: calc(3%);
            /*  height:auto; */
            flex: auto;
            display: flex;
            margin-bottom: 25px;
            border-radius: 40px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #D2b48c; /* # D2D180; */
        }

        .card-title {
            font-size: 25px;
            margin-bottom: 5px;
            margin-left: 25%;
            color: black;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
            font-weight: bolder;
            position: center;
        }

        .btn-group {
            display: block;
            flex-wrap: wrap;
        }

        .Gaakete {
            margin-left: 40px;
        }

        .text-box-btn {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            color: green;
            background-color: #fff;
            border: 1px solid #ccc;
            cursor: pointer;
            outline: none;
            transition: all 0.3s ease;
            width: 90%;
            text-align: center;
            height: 55px;
            text-decoration: revert;
            align-items: center;
            margin-left: 3%;
            background-color: #B3E5FC;
            border-radius: 200px;
            margin-top: 0%;
            margin-bottom: 1%;
            font-size: 25px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.6); /* Add shadow for depth */
            font-weight: bolder;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        }

        .text-box-btn-orange {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            color: black;
            border: 1px solid #ccc;
            cursor: pointer;
            outline: none;
            transition: all 0.3s ease;
            width: 90%;
            text-align: center;
            height: 50px;
            align-items: center;
            margin-left: 3%;
            background-color: orange;
            border-radius: 150px;
            margin-top: 0%;
            margin-bottom: 1%;
            font-size: 20px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.8); /* Add shadow for depth */
            font-weight: bolder;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        }

        .text-box-btn-red {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            color: white;
            border: 1px solid #ccc;
            cursor: pointer;
            outline: none;
            transition: all 0.3s ease;
            width: 90%;
            text-align: center;
            height: 50px;
            align-items: center;
            margin-left: 3%;
            background-color: red;
            border-radius: 150px;
            margin-top: 0%;
            margin-bottom: 1%;
            font-size: 20px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.7); /* Add shadow for depth */
            font-weight: bolder;
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        }
    </style>
</head>
<body>

    <script>
        function refreshPage() {
            location.reload();
        }
        setInterval(refreshPage, 3800);
    </script>
    <div class="container">

        @try
        {
            @if (double.Parse(Model.temperature) < 23)
            {
                <button align="center" type="submit" id="buttonTemp" class="text-box-btn">სადგურში მიმდინარე ტემპერატურაა: @Model.temperature °C / ტენიანობა: @Model.Humidity %</button>
            }
            else if (double.Parse(Model.temperature) >= 23 && double.Parse(Model.temperature) < 25)
            {
                <button align="center" type="submit" id="buttonTemp" class="text-box-btn-orange">სადგურში მიმდინარე ტემპერატურაა: @Model.temperature °C / ტენიანობა: @Model.Humidity %  შეამოწმე !</button>
            }
            else
            {
                <button align="center" type="submit" id="buttonTemp" class="text-box-btn-red">სადგურში მიმდინარე ტემპერატურაა: @Model.temperature °C / ტენიანობა: @Model.Humidity % სასწრაფოდ გადაამოწმე !   !    !   !    !    !    !   !</button>
            }
        }
        catch (Exception)
        {
            <button align="center" type="submit" id="buttonTemp" class="text-box-btn-red">შეცდომა ტემპერატურის წამოღების დროს, დაუკავშირდი დეველოპმენტის ჯგუფს !  ! !</button>
        }

        <div  style="z-index:1000;position:absolute; margin-left:40%">

            <script src="http://globaltv.ge:3395/NatiaResource/Robot.js"></script>
            @Html.Partial("_Robot")

        </div>
        <div class="button-group" style="z-index:1">
            @{
                int i = 0;
                int j = 0;
            }

            @foreach (var item in Model.chyanellnameandalarm.namees)
            {
                var buttonColorss = "green";
                if (j < Model.chyanellnameandalarm.ports.Count)
                {
                    if (i >= 92)
                    {
                        if (Model.chyanellnameandalarm.ports[j] == i + 2)
                        {

                            buttonColorss = "red";
                            j++;
                        }
                    }
                    else
                    if (Model.chyanellnameandalarm.ports[j] == i + 1)
                    {

                        buttonColorss = "red";
                        j++;

                    }

                }
                if (item.Value.Equals("Test"))
                {
                    buttonColorss = "yellow";
                }
                <form method="post" asp-controller="ChanellAlarm" asp-action="HandleButtonClick" asp-route-buttonId="@item.Value">
                    <button type="submit" id="button@(item.Key)" class="btn btn-primary button @(buttonColorss)">@item.Key. @item.Value</button>
                </form>
                i++;
            }

        </div>


        @{
            string cvlad = "green";
        }
        <div class="containera">

     

            @foreach (var monitoring in Model.satelliteview)
            {
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">@monitoring.Degree</h4>
                        <div class="btn-group" role="group" aria-label="Frequency Buttons">
                            @foreach (var detail in monitoring.details)
                            {
                                if (detail.HaveError)
                                {
                                    cvlad = "red";
                                }
                                else
                                {
                                    cvlad = "green";
                                }
                                var buttonId = $"{detail.Frequency}_{detail.Polarisation}_{detail.SymbolRate}";
                                <form method="get" asp-action="#" asp-asp-controller="#" class="Gaakete">
                                    <input type="hidden" name="frequency" value="@detail.PortIn250" />
                                    <button type="submit" id="@buttonId" class="btn btn-primary button @cvlad buttonIko">
                                        @($@"{detail.Frequency} {detail.Polarisation} {detail.SymbolRate} ")
                                        <span style="color: black; font-size: 20px;font-weight:bolder;margin-left:3px;">@(detail.mer)</span>
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>